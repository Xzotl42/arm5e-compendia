name: Release Creation
env:
  # The URL used for the module's "Project URL" link on FoundryVTT's website.
  project_url: "https://github.com/${{github.repository}}"

  # A URL that will always point to the latest manifest.
  # FoundryVTT uses this URL to check whether the current module version that
  # is installed is the latest version. This URL should NOT change,
  # otherwise FoundryVTT won't be able to perform this check.
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/module.json"

  # The URL to the module archive associated with the module release being
  # processed by this workflow.
  release_module_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/arm5e-compendia.zip"
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      # Substitute the Manifest and Download URLs in the system.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          url: ${{ env.project_url }}
          manifest: ${{ env.latest_manifest_url }}
          download: ${{ env.release_module_url }}

      - name: Create Database Packs
        uses: aMediocreDad/foundry-db-packer@v0.2.1
        with:
          inputdir: unpacked/ # The directory which contains the JSON files to pack (required)
          packsdir: packs/ # The directory where the compendium packs should exist (optional)
          pack_classiclevel: true # <boolean> Whether to pack the class level db files (optional)
          pack_nedb: false # <boolean> Whether to pack the nedb db files (optional)



      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./arm5e-compendia.zip module.json LICENSE.txt README.md ReleaseNotes.md  unpacked/ scripts/

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./system.json, ./arm5e.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}